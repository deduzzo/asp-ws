{
  "openapi": "3.0.0",
  "info": {
    "title": "ASP-ws Doc",
    "description": "Documentazione delle API del progetto ASP-ws",
    "termsOfService": "http://example.com/terms",
    "contact": {
      "name": "Roberto De Domenico",
      "url": "http://github.com/deduzzo",
      "email": "deduzzo@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:1337"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "auth_ambiti": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/auth_ambiti-without-required-constraint"
          }
        ]
      },
      "auth_ambiti-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **auth_Ambiti**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "ambito": {
            "type": "string",
            "nullable": true
          },
          "is_dominio": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "auth_livelli": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/auth_livelli-without-required-constraint"
          },
          {
            "required": [
              "livello"
            ]
          }
        ]
      },
      "auth_livelli-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **auth_Livelli**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "livello": {
            "type": "string"
          },
          "descrizione": {
            "type": "string",
            "nullable": true
          },
          "isSuperAdmin": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "auth_scopi": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/auth_scopi-without-required-constraint"
          }
        ]
      },
      "auth_scopi-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **auth_Scopi**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "scopo": {
            "type": "string"
          },
          "attivo": {
            "type": "boolean",
            "default": false
          },
          "utenti": {
            "description": "Array of **auth_utenti**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/auth_utenti"
            }
          }
        }
      },
      "auth_utenti": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/auth_utenti-without-required-constraint"
          }
        ]
      },
      "auth_utenti-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **auth_Utenti**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "username": {
            "type": "string",
            "nullable": false
          },
          "ambito": {
            "description": "JSON dictionary representing the **auth_ambiti** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/auth_ambiti"
              }
            ],
            "nullable": false
          },
          "hash_password": {
            "type": "string",
            "nullable": true
          },
          "livello": {
            "description": "JSON dictionary representing the **auth_livelli** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/auth_livelli"
              }
            ],
            "nullable": false
          },
          "attivo": {
            "type": "boolean",
            "default": false
          },
          "data_disattivazione": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "refresh_token": {
            "type": "string",
            "nullable": true
          },
          "token_revocato": {
            "type": "boolean",
            "default": false
          },
          "scopi": {
            "description": "Array of **auth_scopi**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/auth_scopi"
            }
          }
        }
      },
      "auth_utentiscopi": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/auth_utentiscopi-without-required-constraint"
          },
          {
            "required": [
              "utente",
              "scopo"
            ]
          }
        ]
      },
      "auth_utentiscopi-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **auth_UtentiScopi**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "utente": {
            "description": "JSON dictionary representing the **auth_utenti** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/auth_utenti"
              }
            ]
          },
          "scopo": {
            "description": "JSON dictionary representing the **auth_scopi** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/auth_scopi"
              }
            ]
          }
        }
      }
    },
    "parameters": {
      "AttributeFilterParam": {
        "in": "query",
        "name": "_*_",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "To filter results based on a particular attribute, specify a query parameter with the same name as the attribute defined on your model. For instance, if our `Purchase` model has an `amount` attribute, we could send `GET /purchase?amount=99.99` to return a list of $99.99 purchases."
      },
      "WhereQueryParam": {
        "in": "query",
        "name": "where",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Instead of filtering based on a specific attribute, you may instead choose to provide a `where` parameter with the WHERE piece of a [Waterline criteria](https://sailsjs.com/documentation/concepts/models-and-orm/query-language), _encoded as a JSON string_. This allows you to take advantage of `contains`, `startsWith`, and other sub-attribute criteria modifiers for more powerful `find()` queries.\n\ne.g. `?where={\"name\":{\"contains\":\"theodore\"}}`"
      },
      "LimitQueryParam": {
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The maximum number of records to send back (useful for pagination). Defaults to 30."
      },
      "SkipQueryParam": {
        "in": "query",
        "name": "skip",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The number of records to skip (useful for pagination)."
      },
      "SortQueryParam": {
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The sort order. By default, returned records are sorted by primary key value in ascending order.\n\ne.g. `?sort=lastName%20ASC`"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "externalDocs": {
    "url": "https://www.asp.messina.it"
  },
  "tags": [
    {
      "name": "GetToken"
    },
    {
      "name": "Assistito"
    }
  ],
  "paths": {
    "/csrfToken": {
      "get": {
        "summary": "/csrfToken",
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/login/get-token": {
      "post": {
        "summary": "GetToken",
        "description": "Genera un token JWT per l'utente specificato con scopo e ambito specificati. L'utente deve essere abilitato ed avere il permesso sullo scopo e lo stesso ambito d'utenza",
        "tags": [
          "GetToken"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "login",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Login utente"
          },
          {
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Password utente"
          },
          {
            "in": "query",
            "name": "scopi",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Scopo del token, almeno uno obbligatorio, separati da spazi."
          },
          {
            "in": "query",
            "name": "ambito",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Ambito d'utenza del token. In caso di campo vuoto il valore di default e \"generale\""
          }
        ],
        "responses": {
          "200": {
            "description": "Token generato con successo."
          },
          "400": {
            "description": "Errore generico o dati non validi"
          },
          "401": {
            "description": "L'utente non è autorizzato a generare il token."
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/anagrafica/assistito": {
      "post": {
        "summary": "Assistito",
        "description": "Assistito something.",
        "tags": [
          "Assistito"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "get": {
          "description": "Ritorna l'assistito",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "tags": [
            "Assistito"
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      }
    }
  }
}