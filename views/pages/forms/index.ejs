<!DOCTYPE html>
<html lang="it">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Moduli Disponibili - ASP Messina</title>

  <!-- Tailwind CSS via CDN -->
  <script src="https://cdn.tailwindcss.com"></script>

  <!-- Alpine.js for interactivity -->
  <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>

  <style>
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }

    .fade-in {
      animation: fadeIn 0.3s ease-out;
    }

    .card-hover {
      transition: all 0.3s ease;
    }

    .card-hover:hover {
      transform: translateY(-4px);
      box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
    }

    .spinner {
      border: 3px solid #f3f4f6;
      border-top: 3px solid #3b82f6;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      animation: spin 0.8s linear infinite;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  </style>
</head>
<body class="bg-gradient-to-br from-slate-50 to-slate-100 min-h-screen">

  <div id="app" x-data="formsIndex()" x-init="init()" class="container mx-auto px-4 py-8">

    <!-- Header -->
    <div class="text-center mb-12 fade-in">
      <h1 class="text-4xl font-bold text-gray-800 mb-4">Moduli Disponibili</h1>
      <p class="text-lg text-gray-600">ASP di Messina - Servizi Online</p>
    </div>

    <!-- Loading state -->
    <div x-show="loading" class="flex flex-col items-center justify-center py-20">
      <div class="spinner mb-4"></div>
      <p class="text-gray-600">Caricamento moduli...</p>
    </div>

    <!-- Error state -->
    <div x-show="error" class="bg-red-50 border border-red-200 rounded-lg p-6 mb-6 max-w-2xl mx-auto">
      <h3 class="text-red-800 font-semibold mb-2">Errore</h3>
      <p class="text-red-600" x-text="error"></p>
    </div>

    <!-- Forms grid -->
    <div x-show="!loading && !error && forms.length > 0" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-7xl mx-auto">
      <template x-for="form in forms" :key="form.id">
        <a :href="form.url" class="block">
          <div class="bg-white rounded-lg shadow-md p-6 card-hover fade-in h-full flex flex-col">

            <!-- Theme indicator -->
            <div class="flex items-center justify-between mb-4">
              <span
                class="inline-block px-3 py-1 rounded-full text-xs font-semibold"
                :class="form.theme === 'healthcare' ? 'bg-cyan-100 text-cyan-800' : 'bg-blue-100 text-blue-800'"
                x-text="form.theme === 'healthcare' ? 'Sanitario' : 'Moderno'"
              ></span>

              <!-- reCAPTCHA badge -->
              <div x-show="form.recaptchaEnabled" class="flex items-center text-xs text-gray-500">
                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                </svg>
                Protetto
              </div>
            </div>

            <!-- Title and description -->
            <div class="flex-1">
              <h3 class="text-xl font-bold text-gray-800 mb-2" x-text="form.title"></h3>
              <p class="text-gray-600 text-sm mb-4 line-clamp-3" x-text="form.description || 'Nessuna descrizione disponibile'"></p>
            </div>

            <!-- Metadata -->
            <div class="border-t pt-4 mt-4">
              <div class="flex items-center justify-between text-sm text-gray-500">
                <div class="flex items-center">
                  <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
                  </svg>
                  <span x-text="form.pages + ' ' + (form.pages === 1 ? 'pagina' : 'pagine')"></span>
                </div>
                <span class="text-blue-600 font-medium">Apri â†’</span>
              </div>
            </div>

          </div>
        </a>
      </template>
    </div>

    <!-- Empty state -->
    <div x-show="!loading && !error && forms.length === 0" class="text-center py-20">
      <svg class="w-20 h-20 text-gray-300 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
      </svg>
      <h3 class="text-xl font-semibold text-gray-700 mb-2">Nessun modulo disponibile</h3>
      <p class="text-gray-500">Non sono presenti moduli al momento.</p>
    </div>

    <!-- Footer -->
    <div class="text-center mt-12 text-sm text-gray-500">
      <p>ASP di Messina - Azienda Sanitaria Provinciale</p>
      <p class="mt-1">Per assistenza: <a href="mailto:info@asp.messina.it" class="text-blue-600 hover:underline">info@asp.messina.it</a></p>
    </div>

  </div>

  <script>
    function formsIndex() {
      return {
        forms: [],
        loading: true,
        error: null,

        async init() {
          await this.loadForms();
        },

        async loadForms() {
          try {
            const response = await fetch('/api/v1/forms');
            const data = await response.json();

            if (data.ok && data.data) {
              this.forms = data.data;
            } else {
              this.error = 'Impossibile caricare l\'elenco dei moduli';
            }
          } catch (err) {
            this.error = 'Errore di connessione al server';
            console.error(err);
          } finally {
            this.loading = false;
          }
        }
      }
    }
  </script>

</body>
</html>
